---
openapi: 3.0.1
info:
  title: EXPERTIZA API V1
  version: v1
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
- bearerAuth: []
paths:
  "/api/v1/account_requests/pending":
    get:
      summary: List all Pending Account Requests
      tags:
      - Account Requests
      responses:
        '200':
          description: List Pending Account Requests
  "/api/v1/account_requests/processed":
    get:
      summary: List all Processed Account Requests
      tags:
      - Account Requests
      responses:
        '200':
          description: List Processed Account Requests
  "/api/v1/account_requests":
    post:
      summary: Create Account Request
      tags:
      - Account Requests
      parameters: []
      responses:
        '201':
          description: Create an Account Request whose email already exists in Users
            table
        '422':
          description: Attempt to Create an Account Request whose username already
            exists in Users table
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                full_name:
                  type: string
                email:
                  type: string
                introduction:
                  type: string
                role_id:
                  type: integer
                institution_id:
                  type: integer
              required:
              - username
              - full_name
              - email
              - introduction
              - role_id
              - institution_id
  "/api/v1/account_requests/{id}":
    parameters:
    - name: id
      in: path
      description: id of the Account Request
      required: true
      schema:
        type: integer
    get:
      summary: Show a specific Account Request by id
      tags:
      - Account Requests
      responses:
        '200':
          description: Retrieve a specific account request with valid id
    patch:
      summary: Update Account Request
      tags:
      - Account Requests
      parameters: []
      responses:
        '200':
          description: Reject account request
        '422':
          description: Attempt to send Invalid status in Patch
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: Approved
              required:
              - status
    put:
      summary: Update Account Request
      tags:
      - Account Requests
      parameters: []
      responses:
        '200':
          description: Reject account request
        '422':
          description: Attempt to send Invalid status in PUT
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: Approved
              required:
              - status
    delete:
      summary: Delete Account Request
      tags:
      - Account Requests
      responses:
        '204':
          description: successful
  "/api/v1/assignments":
    get:
      summary: Get assignments
      tags:
      - Get All Assignments
      parameters:
      - name: Content-Type
        in: header
        schema:
          type: string
      responses:
        '200':
          description: assignment successfully
  "/api/v1/assignments/{assignment_id}/add_participant/{user_id}":
    parameters:
    - name: assignment_id
      in: path
      required: true
      schema:
        type: string
    - name: user_id
      in: path
      required: true
      schema:
        type: string
    post:
      summary: Adds a participant to an assignment
      tags:
      - Assignments
      parameters:
      - name: Content-Type
        in: header
        schema:
          type: string
      responses:
        '200':
          description: participant added successfully
        '404':
          description: assignment not found
  "/api/v1/assignments/{assignment_id}/remove_participant/{user_id}":
    parameters:
    - name: assignment_id
      in: path
      required: true
      schema:
        type: string
    - name: user_id
      in: path
      required: true
      schema:
        type: string
    delete:
      summary: Removes a participant from an assignment
      tags:
      - Assignments
      parameters:
      - name: Content-Type
        in: header
        schema:
          type: string
      responses:
        '200':
          description: participant removed successfully
        '404':
          description: assignment or user not found
  "/api/v1/assignments/{assignment_id}/assign_course/{course_id}":
    parameters:
    - name: assignment_id
      in: path
      required: true
      schema:
        type: string
    - name: course_id
      in: path
      required: true
      schema:
        type: string
    patch:
      summary: Make course_id of assignment null
      tags:
      - Assignments
      parameters:
      - name: Content-Type
        in: header
        schema:
          type: string
      responses:
        '200':
          description: course_id assigned successfully
        '404':
          description: assignment not found
  "/api/v1/assignments/{assignment_id}/remove_assignment_from_course":
    patch:
      summary: Removes assignment from course
      tags:
      - Assignments
      parameters:
      - name: assignment_id
        in: path
        required: true
        schema:
          type: integer
      - name: Content-Type
        in: header
        schema:
          type: string
      responses:
        '200':
          description: assignment removed from course
        '404':
          description: assignment not found
  "/api/v1/assignments/{assignment_id}/copy_assignment":
    parameters:
    - name: assignment_id
      in: path
      required: true
      schema:
        type: string
    post:
      summary: Copy an existing assignment
      tags:
      - Assignments
      parameters:
      - name: Content-Type
        in: header
        schema:
          type: string
      responses:
        '200':
          description: assignment copied successfully
        '404':
          description: assignment not found
  "/api/v1/assignments/{id}":
    parameters:
    - name: id
      in: path
      description: Assignment ID
      required: true
      schema:
        type: integer
    delete:
      summary: Delete an assignment
      tags:
      - Assignments
      parameters:
      - name: Content-Type
        in: header
        schema:
          type: string
      responses:
        '200':
          description: successful
        '404':
          description: Assignment not found
  "/api/v1/assignments/{assignment_id}/has_topics":
    parameters:
    - name: assignment_id
      in: path
      description: Assignment ID
      required: true
      schema:
        type: integer
    get:
      summary: Check if an assignment has topics
      tags:
      - Assignments
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      - name: Content-Type
        in: header
        schema:
          type: string
      responses:
        '200':
          description: successful
        '404':
          description: Assignment not found
  "/api/v1/assignments/{assignment_id}/team_assignment":
    parameters:
    - name: assignment_id
      in: path
      description: Assignment ID
      required: true
      schema:
        type: integer
    get:
      summary: Check if an assignment is a team assignment
      tags:
      - Assignments
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      - name: Content-Type
        in: header
        schema:
          type: string
      responses:
        '200':
          description: successful
        '404':
          description: Assignment not found
  "/api/v1/assignments/{assignment_id}/valid_num_review/{review_type}":
    parameters:
    - name: assignment_id
      in: path
      description: Assignment ID
      required: true
      schema:
        type: integer
    - name: review_type
      in: path
      description: Review Type
      required: true
      schema:
        type: string
    get:
      summary: Check if an assignment has a valid number of reviews for a specific
        type
      tags:
      - Assignments
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      - name: Content-Type
        in: header
        schema:
          type: string
      responses:
        '200':
          description: successful
        '404':
          description: Assignment not found
  "/api/v1/assignments/{assignment_id}/has_teams":
    parameters:
    - name: assignment_id
      in: path
      description: Assignment ID
      required: true
      schema:
        type: integer
    get:
      summary: Check if an assignment has teams
      tags:
      - Assignments
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      - name: Content-Type
        in: header
        schema:
          type: string
      responses:
        '200':
          description: successful
        '404':
          description: Assignment not found
  "/api/v1/assignments/{id}/show_assignment_details":
    parameters:
    - name: id
      in: path
      description: Assignment ID
      required: true
      schema:
        type: integer
    get:
      summary: Retrieve assignment details
      tags:
      - Assignments
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      - name: Content-Type
        in: header
        schema:
          type: string
      responses:
        '200':
          description: successful
        '404':
          description: Assignment not found
  "/api/v1/bookmarks":
    get:
      summary: list bookmarks
      tags:
      - Bookmarks
      responses:
        '200':
          description: successful
    post:
      summary: create bookmark
      tags:
      - Bookmarks
      parameters: []
      responses:
        '201':
          description: created
        '422':
          description: unprocessable entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                title:
                  type: string
                description:
                  type: string
                topic_id:
                  type: integer
              required:
              - url
              - title
              - description
              - topic_id
  "/api/v1/bookmarks/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    get:
      summary: show bookmark
      tags:
      - Bookmarks
      responses:
        '200':
          description: successful
        '404':
          description: not_found
    put:
      summary: update bookmark
      tags:
      - Bookmarks
      parameters: []
      responses:
        '200':
          description: successful
        '404':
          description: not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
    delete:
      summary: delete bookmark
      tags:
      - Bookmarks
      responses:
        '204':
          description: successful
        '404':
          description: not found
  "/api/v1/bookmarks/{id}/bookmarkratings":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    post:
      summary: save bookmark rating score
      tags:
      - Bookmarks
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                rating:
                  type: integer
              required:
              - rating
    get:
      summary: get bookmark rating score
      tags:
      - Bookmarks
      responses:
        '200':
          description: successful
        '404':
          description: not found
  "/api/v1/courses/{id}/add_ta/{ta_id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    - name: ta_id
      in: path
      required: true
      schema:
        type: integer
    get:
      summary: add_ta course
      tags:
      - Courses
      responses:
        '201':
          description: successful
  "/api/v1/courses/{id}/tas":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: view_tas course
      tags:
      - Courses
      responses:
        '200':
          description: successful
  "/api/v1/courses/{id}/remove_ta/{ta_id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    - name: ta_id
      in: path
      description: ta_id
      required: true
      schema:
        type: string
    get:
      summary: remove_ta course
      tags:
      - Courses
      responses:
        '200':
          description: successful
  "/api/v1/courses/{id}/copy":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: copy course
      tags:
      - Courses
      responses:
        '200':
          description: successful
  "/api/v1/courses":
    get:
      summary: list courses
      tags:
      - Courses
      responses:
        '200':
          description: successful
    post:
      summary: create course
      tags:
      - Courses
      parameters: []
      responses:
        '201':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                directory_path:
                  type: string
                instructor_id:
                  type: integer
                institution_id:
                  type: integer
                info:
                  type: string
              required:
              - name
              - directory_path
              - institution_id
              - instructor_id
  "/api/v1/courses/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show course
      tags:
      - Courses
      responses:
        '200':
          description: successful
    patch:
      summary: update course
      tags:
      - Courses
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                directory_path:
                  type: string
                instructor_id:
                  type: integer
                institution_id:
                  type: integer
                info:
                  type: string
              required: []
    put:
      summary: update course
      tags:
      - Courses
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                directory_path:
                  type: string
                instructor_id:
                  type: integer
                institution_id:
                  type: integer
                info:
                  type: string
              required: []
    delete:
      summary: delete course
      tags:
      - Courses
      responses:
        '204':
          description: successful
  "/api/v1/institutions":
    get:
      summary: list institutions
      tags:
      - Institutions
      responses:
        '200':
          description: successful
    post:
      summary: create institution
      tags:
      - Institutions
      parameters: []
      responses:
        '201':
          description: Created a institution
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
  "/api/v1/institutions/{id}":
    parameters:
    - name: id
      in: path
      description: id of the institution
      required: true
      schema:
        type: integer
    get:
      summary: show institution
      tags:
      - Institutions
      responses:
        '200':
          description: successful
    patch:
      summary: update institution
      tags:
      - Institutions
      parameters: []
      responses:
        '200':
          description: successful
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
    put:
      summary: update institution
      tags:
      - Institutions
      parameters: []
      responses:
        '200':
          description: successful
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
    delete:
      summary: delete institution
      tags:
      - Institutions
      responses:
        '200':
          description: successful
  "/api/v1/invitations":
    get:
      summary: list invitations
      tags:
      - Invitations
      responses:
        '200':
          description: Success
    post:
      summary: create invitation
      tags:
      - Invitations
      parameters: []
      responses:
        '201':
          description: Create successful
        '422':
          description: Invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                assignment_id:
                  type: integer
                from_id:
                  type: integer
                to_id:
                  type: integer
                reply_status:
                  type: string
              required:
              - assignment_id
              - from_id
              - to_id
  "/api/v1/invitations/{id}":
    parameters:
    - name: id
      in: path
      description: id of the invitation
      required: true
      schema:
        type: integer
    get:
      summary: show invitation
      tags:
      - Invitations
      responses:
        '200':
          description: Show invitation
        '404':
          description: Not found
    patch:
      summary: update invitation
      tags:
      - Invitations
      parameters: []
      responses:
        '200':
          description: Update successful
        '422':
          description: Invalid request
        '404':
          description: Not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reply_status:
                  type: string
              required: []
    delete:
      summary: Delete invitation
      tags:
      - Invitations
      responses:
        '204':
          description: Delete successful
        '404':
          description: Not found
  "/api/v1/invitations/user/{user_id}/assignment/{assignment_id}":
    parameters:
    - name: user_id
      in: path
      description: id of user
      required: true
      schema:
        type: integer
    - name: assignment_id
      in: path
      description: id of assignment
      required: true
      schema:
        type: integer
    get:
      summary: Show all invitation for the given user and assignment
      tags:
      - Invitations
      responses:
        '200':
          description: Show all invitations for the user for an assignment
        '404':
          description: Not found
  "/api/v1/join_team_requests/decline/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    post:
      summary: decline join_team_request
      tags:
      - Join Team Requests
      responses:
        '200':
          description: successful
  "/api/v1/join_team_requests":
    get:
      summary: list join_team_requests
      tags:
      - Join Team Requests
      responses:
        '200':
          description: successful
    post:
      summary: create join_team_request
      parameters:
      - name: comments
        in: query
        description: comments
        schema:
          type: string
      - name: team_id
        in: query
        description: team_id
        schema:
          type: integer
      - name: assignment_id
        in: query
        description: assignment_id
        schema:
          type: integer
      tags:
      - Join Team Requests
      responses:
        '200':
          description: success
        '201':
          description: created
        '422':
          description: unprocessable entity
  "/api/v1/join_team_requests/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show join_team_request
      tags:
      - Join Team Requests
      responses:
        '404':
          description: not_found
        '200':
          description: successful
    patch:
      summary: update join_team_request
      parameters:
      - name: join_team_request[comments]
        in: query
        description: comments
        schema:
          type: string
      - name: join_team_request[status]
        in: query
        description: status
        schema:
          type: string
      tags:
      - Join Team Requests
      responses:
        '200':
          description: successful
    put:
      summary: update join_team_request
      parameters:
      - name: join_team_request[comments]
        in: query
        description: comments
        schema:
          type: string
      - name: join_team_request[status]
        in: query
        description: status
        schema:
          type: string
      tags:
      - Join Team Requests
      responses:
        '200':
          description: successful
        '422':
          description: unprocessable entity
    delete:
      summary: delete join_team_request
      tags:
      - Join Team Requests
      responses:
        '204':
          description: successful
        '404':
          description: not found
  "/api/v1/participants/user/{user_id}":
    get:
      summary: Retrieve participants for a specific user
      tags:
      - Participants
      parameters:
      - name: user_id
        in: path
        description: ID of the user
        required: true
        schema:
          type: integer
      - name: Authorization
        in: header
        required: true
        description: Bearer token
        schema:
          type: string
      responses:
        '200':
          description: Participant not found with user_id
        '404':
          description: User Not Found
        '401':
          description: Unauthorized
  "/api/v1/participants/assignment/{assignment_id}":
    get:
      summary: Retrieve participants for a specific assignment
      tags:
      - Participants
      parameters:
      - name: assignment_id
        in: path
        description: ID of the assignment
        required: true
        schema:
          type: integer
      - name: Authorization
        in: header
        required: true
        description: Bearer token
        schema:
          type: string
      responses:
        '200':
          description: Returns participants
        '404':
          description: Assignment Not Found
        '401':
          description: Unauthorized
  "/api/v1/participants/{id}":
    get:
      summary: Retrieve a specific participant
      tags:
      - Participants
      parameters:
      - name: id
        in: path
        description: ID of the participant
        required: true
        schema:
          type: integer
      - name: Authorization
        in: header
        required: true
        description: Bearer token
        schema:
          type: string
      responses:
        '201':
          description: Returns a participant
        '404':
          description: Participant not found
        '401':
          description: Unauthorized
    delete:
      summary: Delete a specific participant
      tags:
      - Participants
      parameters:
      - name: id
        in: path
        description: ID of the participant
        required: true
        schema:
          type: integer
      - name: Authorization
        in: header
        required: true
        description: Bearer token
        schema:
          type: string
      responses:
        '200':
          description: Participant deleted
        '404':
          description: Participant not found
        '401':
          description: Unauthorized
  "/api/v1/participants/{id}/{authorization}":
    patch:
      summary: Update participant authorization
      tags:
      - Participants
      parameters:
      - name: id
        in: path
        description: ID of the participant
        required: true
        schema:
          type: integer
      - name: authorization
        in: path
        description: New authorization
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        required: true
        description: Bearer token
        schema:
          type: string
      responses:
        '201':
          description: Participant updated
        '404':
          description: Participant not found
        '422':
          description: Authorization not found
        '401':
          description: Unauthorized
  "/api/v1/participants/{authorization}":
    post:
      summary: Add a participant
      tags:
      - Participants
      parameters:
      - name: authorization
        in: path
        description: Authorization level (Reader, Reviewer, Submitter, Mentor)
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        required: true
        description: Bearer token
        schema:
          type: string
      responses:
        '201':
          description: Participant successfully added
        '500':
          description: Participant already exist
        '404':
          description: Assignment not found
        '422':
          description: Invalid authorization
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: ID of the user
                assignment_id:
                  type: integer
                  description: ID of the assignment
              required:
              - user_id
              - assignment_id
  "/api/v1/questionnaires":
    get:
      summary: list questionnaires
      tags:
      - Questionnaires
      responses:
        '200':
          description: successful
    post:
      summary: create questionnaire
      tags:
      - Questionnaires
      parameters: []
      responses:
        '201':
          description: created
        '422':
          description: unprocessable entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                questionnaire_type:
                  type: string
                private:
                  type: boolean
                min_question_score:
                  type: integer
                max_question_score:
                  type: integer
                instructor_id:
                  type: integer
              required:
              - id
              - name
              - questionnaire_type
              - private
              - min_question_score
              - max_question_score
              - instructor_id
  "/api/v1/questionnaires/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    get:
      summary: show questionnaire
      tags:
      - Questionnaires
      responses:
        '200':
          description: successful
        '404':
          description: not_found
    put:
      summary: update questionnaire
      tags:
      - Questionnaires
      parameters: []
      responses:
        '200':
          description: successful
        '404':
          description: not found
        '422':
          description: unprocessable entity
          content:
            application/json:
              schema:
                type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                min_question_score:
                  type: integer
    patch:
      summary: update questionnaire
      tags:
      - Questionnaires
      parameters: []
      responses:
        '200':
          description: successful
        '404':
          description: not found
        '422':
          description: unprocessable entity
          content:
            application/json:
              schema:
                type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                min_question_score:
                  type: integer
    delete:
      summary: delete questionnaire
      tags:
      - Questionnaires
      responses:
        '204':
          description: successful
        '404':
          description: not found
  "/api/v1/questionnaires/toggle_access/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    get:
      summary: toggle access
      tags:
      - Questionnaires
      responses:
        '200':
          description: successful
        '404':
          description: not found
  "/api/v1/questionnaires/copy/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    post:
      summary: copy questionnaire
      tags:
      - Questionnaires
      responses:
        '200':
          description: successful
        '404':
          description: not found
  "/api/v1/questions":
    get:
      summary: list questions
      tags:
      - Questions
      responses:
        '200':
          description: successful
    post:
      summary: create item
      tags:
      - Questions
      parameters: []
      responses:
        '201':
          description: created
        '404':
          description: questionnaire id not found
        '422':
          description: unprocessable entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                weight:
                  type: integer
                questionnaire_id:
                  type: integer
                break_before:
                  type: boolean
                txt:
                  type: string
                question_type:
                  type: string
              required:
              - weight
              - questionnaire_id
              - break_before
              - txt
              - question_type
  "/api/v1/questions/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    get:
      summary: show item
      tags:
      - Questions
      responses:
        '200':
          description: successful
        '404':
          description: not_found
    put:
      summary: update item
      tags:
      - Questions
      parameters: []
      responses:
        '200':
          description: successful
        '404':
          description: not found
        '422':
          description: unprocessable entity
          content:
            application/json:
              schema:
                type: object
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                break_before:
                  type: boolean
                seq:
                  type: integer
    patch:
      summary: update item
      tags:
      - Questions
      parameters: []
      responses:
        '200':
          description: successful
        '404':
          description: not found
        '422':
          description: unprocessable entity
          content:
            application/json:
              schema:
                type: object
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                break_before:
                  type: boolean
                seq:
                  type: integer
    delete:
      summary: delete item
      tags:
      - Questions
      responses:
        '204':
          description: successful
        '404':
          description: not found
  "/api/v1/questions/delete_all/questionnaire/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    delete:
      summary: delete all questions
      tags:
      - Questions
      responses:
        '200':
          description: successful
        '404':
          description: not found
  "/api/v1/questions/show_all/questionnaire/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    get:
      summary: show all questions
      tags:
      - Questions
      responses:
        '200':
          description: successful
        '404':
          description: not found
  "/api/v1/questions/types":
    get:
      summary: item types
      tags:
      - Questions
      responses:
        '200':
          description: successful
  "/api/v1/roles":
    get:
      summary: list roles
      tags:
      - Roles
      responses:
        '200':
          description: successful
    post:
      summary: create role
      tags:
      - Roles
      parameters: []
      responses:
        '201':
          description: Created a role
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                parent_id:
                  type: integer
                default_page_id:
                  type: integer
              required:
              - name
  "/api/v1/roles/{id}":
    parameters:
    - name: id
      in: path
      description: id of the role
      required: true
      schema:
        type: integer
    get:
      summary: show role
      tags:
      - Roles
      responses:
        '200':
          description: successful
    patch:
      summary: update role
      tags:
      - Roles
      parameters: []
      responses:
        '200':
          description: successful
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                parent_id:
                  type: integer
                default_page_id:
                  type: integer
              required:
              - name
    put:
      summary: update role
      tags:
      - Roles
      parameters: []
      responses:
        '200':
          description: successful
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                parent_id:
                  type: integer
                default_page_id:
                  type: integer
              required:
              - name
    delete:
      summary: delete role
      tags:
      - Roles
      responses:
        '204':
          description: successful
  "/api/v1/sign_up_topics":
    get:
      summary: Get sign-up topics
      parameters:
      - name: assignment_id
        in: query
        description: Assignment ID
        required: true
        schema:
          type: integer
      - name: topic_ids
        in: query
        description: Topic Identifier
        required: false
        schema:
          type: string
      tags:
      - SignUpTopic
      responses:
        '200':
          description: successful
    delete:
      summary: Delete sign-up topics
      parameters:
      - name: assignment_id
        in: query
        description: Assignment ID
        required: true
        schema:
          type: integer
      - name: topic_ids
        in: query
        items:
          type: string
        description: Topic Identifiers to delete
        required: false
        schema:
          type: array
      tags:
      - SignUpTopic
      responses:
        '200':
          description: successful
    post:
      summary: create a new topic in the sheet
      tags:
      - SignUpTopic
      parameters: []
      responses:
        '201':
          description: Success
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                topic_identifier:
                  type: integer
                topic_name:
                  type: string
                max_choosers:
                  type: integer
                category:
                  type: string
                assignment_id:
                  type: integer
                micropayment:
                  type: integer
              required:
              - topic_identifier
              - topic_name
              - max_choosers
              - category
              - assignment_id
              - micropayment
  "/api/v1/sign_up_topics/{id}":
    parameters:
    - name: id
      in: path
      description: id of the sign up topic
      required: true
      schema:
        type: integer
    put:
      summary: update a new topic in the sheet
      tags:
      - SignUpTopic
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                topic_identifier:
                  type: integer
                topic_name:
                  type: string
                max_choosers:
                  type: integer
                category:
                  type: string
                assignment_id:
                  type: integer
                micropayment:
                  type: integer
              required:
              - topic_identifier
              - topic_name
              - category
              - assignment_id
  "/api/v1/signed_up_teams/sign_up":
    post:
      summary: Creates a signed up team
      tags:
      - SignedUpTeams
      parameters: []
      responses:
        '201':
          description: signed up team created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                team_id:
                  type: integer
                topic_id:
                  type: integer
              required:
              - team_id
              - topic_id
  "/api/v1/signed_up_teams/sign_up_student":
    parameters:
    - name: user_id
      in: query
      description: User ID
      required: true
      schema:
        type: integer
    post:
      summary: Creates a signed up team by student
      tags:
      - SignedUpTeams
      parameters: []
      responses:
        '201':
          description: signed up team created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                topic_id:
                  type: integer
              required:
              - topic_id
  "/api/v1/signed_up_teams":
    parameters:
    - name: topic_id
      in: query
      description: Topic ID
      required: true
      schema:
        type: integer
    get:
      summary: Retrieves signed up teams
      tags:
      - SignedUpTeams
      responses:
        '200':
          description: signed up teams found
          content:
            application/json:
              schema:
                type: array
                properties:
                  id:
                    type: integer
                  topic_id:
                    type: integer
                  team_id:
                    type: integer
                  is_waitlisted:
                    type: boolean
                  preference_priority_number:
                    type: integer
                required:
                - id
                - topic_id
                - team_id
                - is_waitlisted
                - preference_priority_number
        '404':
          description: signed up teams not found
  "/api/v1/signed_up_teams/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    put:
      summary: Updates a signed up team
      tags:
      - SignedUpTeams
      parameters: []
      responses:
        '200':
          description: signed up team updated
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                is_waitlisted:
                  type: boolean
                preference_priority_number:
                  type: integer
    delete:
      summary: Deletes a signed up team
      tags:
      - SignedUpTeams
      responses:
        '204':
          description: signed up team deleted
        '422':
          description: invalid request
  "/api/v1/student_tasks/list":
    get:
      summary: student tasks list
      tags:
      - StudentTasks
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '200':
          description: authorized request has proper JSON schema
        '401':
          description: unauthorized request has error response
  "/api/v1/student_tasks/view":
    get:
      summary: Retrieve a specific student task by ID
      tags:
      - StudentTasks
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: Integer
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '200':
          description: successful retrieval of a student task
        '500':
          description: participant not found
        '401':
          description: unauthorized request has error response
  "/api/v1/student_teams":
    get:
      summary: Lists all teams for a student
      tags:
      - Student Teams
      parameters:
      - name: id
        in: query
        required: true
        description: Student ID
        schema:
          type: integer
      responses:
        '200':
          description: teams found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  teams:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        created_at:
                          type: string
                          format: date-time
                        updated_at:
                          type: string
                          format: date-time
                        assignment_id:
                          type: integer
        '404':
          description: student not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  error:
                    type: string
    post:
      summary: Creates a team
      tags:
      - Student Teams
      parameters:
      - name: id
        in: query
        required: true
        description: Student ID
        schema:
          type: integer
      responses:
        '201':
          description: team created
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  team:
                    type: object
                    properties:
                      id:
                        type: integer
                      created_at:
                        type: string
                        format: date-time
                      updated_at:
                        type: string
                        format: date-time
                      assignment_id:
                        type: integer
        '422':
          description: invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  error:
                    type: string
  "/api/v1/student_teams/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    get:
      summary: Retrieves a team
      tags:
      - Student Teams
      responses:
        '200':
          description: team found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  team:
                    type: object
                    properties:
                      id:
                        type: integer
                      created_at:
                        type: string
                        format: date-time
                      updated_at:
                        type: string
                        format: date-time
                      assignment_id:
                        type: integer
                  members:
                    type: array
                    items:
                      type: object
        '404':
          description: team not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    delete:
      summary: Deletes a team
      tags:
      - Student Teams
      responses:
        '200':
          description: team deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: team not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  "/api/v1/student_teams/{id}/add_participant":
    post:
      summary: Adds a participant to the team
      tags:
      - Student Teams
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      - name: participant_id
        in: query
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: participant added
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
        '422':
          description: invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  error:
                    type: string
  "/login":
    post:
      summary: Logs in a user
      tags:
      - Authentication
      parameters: []
      responses:
        '200':
          description: successful login
        '401':
          description: invalid credentials
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_name:
                  type: string
                password:
                  type: string
              required:
              - user_name
              - password
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3002
